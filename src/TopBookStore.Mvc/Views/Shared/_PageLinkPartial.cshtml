@{
    // Calculate the starting and ending page numbers to display
    int startPage = Math.Max(1, Model.PageNumber - 2); // Show 2 pages before the current page
    int endPage = Math.Min(Model.TotalPages, startPage + 5); // Show 5 pages in total

    RouteDictionary routes = Model.CurrentRoute.Clone();

    // Previous page link
    if (Model.PageNumber > 1)
    {
        routes.PageNumber = Model.PageNumber - 1;
        <a asp-action="Index" asp-all-route-data="@routes"
           class="btn btn-primary">Previous</a>
    }

    // Middle link
    for (int i = startPage; i <= endPage; i++)
    {
        routes.PageNumber = i;
        string active = @Nav.Active(i, Model.PageNumber);
        <a asp-action="Index" asp-all-route-data="@routes"
           class="btn btn-outline-primary @active">
           @i
        </a>
    }

    // Next page link
    if (Model.PageNumber < Model.TotalPages)
    {
        routes.PageNumber = Model.PageNumber + 1;
        <a asp-action="Index" asp-all-route-data="@routes"
           class="btn btn-primary">Next</a>
    }
}